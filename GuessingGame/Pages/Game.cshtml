@page

@model GuessingGame.Pages.GameModel
@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@{
    var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
}

<div class="text-center">
    <h2>Hello @Model.GetGameSession().PlayerName;</h2>
    <h3>Genereated number - @Model.GetGameSession().NumberToGuess</h3>
</div>

<div class="centered-inner-div mt-5">

    <div class="d-flex centered-inner-div">
        <div class="d-inline-block">
            <form>
                <div class="form-group row">
                    <input type="number" class="form-control col-2 text-center inputs" min="1" max="9" id="num1" name="num1" />
                    <input type="number" class="form-control col-2 text-center inputs" min="0" max="9" id="num2" name="num2" />
                    <input type="number" class="form-control col-2 text-center inputs" min="0" max="9" id="num3" name="num3" />
                    <input type="number" class="form-control col-2 text-center inputs" min="0" max="9" id="num4" name="num4" />
                </div>
                <span id="input-error-field" style="position:relative; bottom: 20px; right:40px; color:red;"></span>
            </form>
            <div>
                <div>
                    <button class="btn btn-info" onclick="GetInput()">Try guess</button>
                </div>
            </div>
        </div>
        <div class="d-inline-block">
            <h3>Your inputs:</h3>
            <div id="input-history" class="border">
                @{
                    var gameSession = Model.GetGameSession();
                    for (int i = 0; i < gameSession.PlayerInputs.Count; i++)
                    {
                        <span class="pt-3 pl-3">@gameSession.PlayerInputs[i]</span>
                        <span class="pt-3 pl-3"><strong>M:</strong>@gameSession.GuessResults[i].CorrectMatches <strong>P:</strong>@gameSession.GuessResults[i].CorrectPositions</span><br>
                    }
                }

            </div>
            <h4 id="tries-left">Tries left: @Model.GetGameSession().TriesLeft</h4>
        </div>
    </div>

</div>

<script>

    $(document).ready(function () {
        $(".inputs").keyup(function () {
            if ($(this).val() !== "") {
                $(this).next(".inputs").focus();
            }
        });

        var inputs = document.getElementsByClassName("inputs");
        for (var i = 0; i < inputs.length; i++) {
            inputs[i].addEventListener('keydown', (e) =>
            {
                if (e.key === 'Enter') {
                    GetInput();
                }
            });
        }
    });

    function ValidateInput(number)
    {
        if (number < 0 || number > 9) {
            document.getElementById("input-error-field").innerHTML = "Error. Input one digit in each field";
            return false;
        }
        return true;
    }

    function containsUnique(str) {
        return new Set(str).size == str.length;
    }

    function GetInput() {
        document.getElementById("input-error-field").innerHTML = "";



        var num1 = document.getElementById("num1").value;
        var num2 = document.getElementById("num2").value;
        var num3 = document.getElementById("num3").value;
        var num4 = document.getElementById("num4").value;

        var validInput = ValidateInput(num1) && ValidateInput(num2) && ValidateInput(num3) && ValidateInput(num4);
        if (validInput === false) return;

        var input = num1 + num2 + num3 + num4;
        if (containsUnique(input) === false) {
            document.getElementById("input-error-field").innerHTML = "Error. Input unique number in each field";
            return
        }

        SendInput(input);
    }

    function SendInput(input) {

        var dataValue = { "input": input, };

        $.ajax({
            type: "GET",
            url: "/gameinput",
            contentType: 'application/json',
            dataType: 'json',
            data: dataValue,
            headers: { "RequestVerificationToken": "@token", },
            success: function (result) {
                console.log(result);
                if (result.playerWon || result.triesLeft <= 0) {
                    window.location.href = "/gameover";
                }
                else
                {
                    $("#tries-left").text("Tries left: " + result.triesLeft);
                    $("#input-history").append("<span class=\"pt-3 pl-3\">" + result.lastMove + "</span>");
                    $("#input-history").append("<span class=\"pt-3 pl-3\"> <strong>M:</strong>" + result.lastGuessResult.correctMatches);
                    $('#input-history').append(" <strong>P:</strong>" + result.lastGuessResult.correctPositions + "</span><br>");
                }
            },
            error: function (error) {
                console.log(error);
            }
        });

        ClearInputs();

    }

    function ClearInputs() {
        var inputs = document.getElementsByClassName("inputs");
        for (var i = 0; i < inputs.length; i++) {
            inputs[i].value = "";
        }
        inputs[0].focus();
    }

</script>
